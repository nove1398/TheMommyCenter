// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MommyDayCare.Server.Data;

namespace MommyDayCare.Server.Migrations
{
    [DbContext(typeof(BlogDBContext))]
    [Migration("20200505120703_appuserGroupEdited")]
    partial class appuserGroupEdited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MommyDayCare.Shared.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivationKey")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginAttemps")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserSlug")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AppUserId");

                    b.HasIndex("AppUserGroupId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            AppUserId = 1,
                            ActivationKey = 0,
                            Avatar = "",
                            Biography = "Hi, I am me",
                            Birthday = new DateTime(2020, 6, 5, 7, 7, 3, 356, DateTimeKind.Local).AddTicks(4039),
                            Country = "jamaica",
                            Email = "test@gmail.com",
                            FirstName = "nove",
                            IsActive = true,
                            IsPrivate = false,
                            LastName = "francis",
                            LoginAttemps = 0,
                            Password = "254954d957f71e705815ed79dd9481d68b5f3cf4b5933fb1516929886c0bb221",
                            RegisteredOn = new DateTime(2020, 5, 5, 7, 7, 3, 355, DateTimeKind.Local).AddTicks(1830),
                            Salt = "Irk/0AuJPJABaDmJ5z3pmQ==",
                            Sex = 0,
                            UserSlug = new Guid("c12327bc-bbcf-4edc-ab5a-43498a5cfa93"),
                            Username = "humpty_fore"
                        });
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.AppUserFollowing", b =>
                {
                    b.Property<int>("AppUserFollowerId")
                        .HasColumnType("int");

                    b.Property<int>("AppUserToFolloweeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("AppUserFollowerId", "AppUserToFolloweeId");

                    b.HasIndex("AppUserToFolloweeId");

                    b.ToTable("AppUserFollowing");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.AppUserGroup", b =>
                {
                    b.Property<int>("AppUserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("AppUserGroupId");

                    b.ToTable("AppUserGroups");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.AppUserRole", b =>
                {
                    b.Property<int>("AppUserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("AppUserRoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            AppUserRoleId = 3,
                            Description = "Access to site content",
                            Name = "User"
                        },
                        new
                        {
                            AppUserRoleId = 1,
                            Description = "Access to all the site content",
                            Name = "Administrator"
                        },
                        new
                        {
                            AppUserRoleId = 2,
                            Description = "Access to approve some site content",
                            Name = "Moderator"
                        });
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Collection", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CollectionId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("CommentId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Favourite", b =>
                {
                    b.Property<int>("FavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.HasKey("FavouriteId");

                    b.ToTable("Favourite");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OpenOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("PostCategory")
                        .HasColumnType("int");

                    b.Property<Guid>("Slug")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("PostId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CollectionId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.UsersToRoles", b =>
                {
                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("AppUserRoleId")
                        .HasColumnType("int");

                    b.HasKey("AppUserId", "AppUserRoleId");

                    b.HasIndex("AppUserRoleId");

                    b.ToTable("UsersToRoles");

                    b.HasData(
                        new
                        {
                            AppUserId = 1,
                            AppUserRoleId = 1
                        },
                        new
                        {
                            AppUserId = 1,
                            AppUserRoleId = 2
                        },
                        new
                        {
                            AppUserId = 1,
                            AppUserRoleId = 3
                        });
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.AppUser", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.AppUserGroup", "AppUserGroup")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppUserGroupId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.AppUserFollowing", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "AppUserFollower")
                        .WithMany("AppUserFollowers")
                        .HasForeignKey("AppUserFollowerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "AppUserFollowee")
                        .WithMany("AppUserFollowees")
                        .HasForeignKey("AppUserToFolloweeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Comment", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "AppUser")
                        .WithMany("Comments")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MommyDayCare.Shared.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Message", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "Receiver")
                        .WithMany("MessageTo")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "Sender")
                        .WithMany("MessageFrom")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.Post", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "AppUser")
                        .WithMany("Posts")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MommyDayCare.Shared.Models.Collection", null)
                        .WithMany("Posts")
                        .HasForeignKey("CollectionId");
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.PostTag", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MommyDayCare.Shared.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MommyDayCare.Shared.Models.UsersToRoles", b =>
                {
                    b.HasOne("MommyDayCare.Shared.Models.AppUser", "AppUser")
                        .WithMany("UsersToRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MommyDayCare.Shared.Models.AppUserRole", "AppUserRole")
                        .WithMany("UsersToRoles")
                        .HasForeignKey("AppUserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
