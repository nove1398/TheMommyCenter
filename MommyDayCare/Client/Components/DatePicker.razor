<div class="row">
    <div class="col-sm-auto">
        <div class="d-inline-block mr-2">
            <select @bind="Day" class="form-control">
                <option selected>Day</option>
                @for(int i = 1; i <= 31; i++)
                {
                    <option value="@i">@i</option>
                }
            </select>
        </div>
        <div class="d-inline-block mr-2">
            <select @bind="Month" class="form-control">
                <option selected>Month</option>
                @for (int i = 1;i<= 12; i++)
                {
                    <option value="@i">@Months[i-1]</option>
                }
            </select>
        </div>
        <div class="d-inline-block mr-2">
            <select @bind="Year" class="form-control">
                <option selected>Year</option>
                @for (int i = DateTime.Now.Year - 100; i <= DateTime.Now.Year; i++)
                {
                    <option value="@i">@i</option>
                }
            </select>
        </div>
    </div>
    <div class="col-sm-1">
        <a @onclick="OnSelected" class="btn  btn-info text-white" style="cursor: pointer" >Select</a>
    </div>
</div>

@code {
    public int Day { get; set; }
    public int Month { get; set; }
    public int Year { get; set; }
    [Parameter]
    public DateTime InitialDate { get; set; } = DateTime.Now;
    private string[] Months = new string[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };

    [Parameter]
    public EventCallback<DateTime> DateSelected { get; set; }


    protected override void OnInitialized()
    {
        base.OnInitialized();
        Day = InitialDate.Day;
        Month = InitialDate.Month;
        Year = InitialDate.Year;
    }

    public Task OnSelected()
    {
        DateTime dt = new DateTime(Year, Month, Day);
        return DateSelected.InvokeAsync(dt);
    }
}
