@page "/auth/register"
@inject HttpProvider Http
@inject NavigationManager NavigationManager

<div class="card">
    <div class="card-body">
        <h3>Register </h3>
        @if (Errors.Length > 0)
        {
            //Display errors
        }
    <EditForm Model="RegisterModel" OnValidSubmit="SubmitRegister">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>First Name</label>
            <InputText class="form-control" @bind-Value="RegisterModel.FirstName" />
            <ValidationMessage For="@(()=> RegisterModel.FirstName)" />
        </div>
        <div class="form-group">
            <label>Last Name</label>
            <InputText class="form-control" @bind-Value="RegisterModel.LastName" />
            <ValidationMessage For="@(()=> RegisterModel.LastName)" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="RegisterModel.Email" />
            <ValidationMessage For="@(()=> RegisterModel.Email)" />
        </div>
        <div class="form-group">
            <label>Password</label>
            <InputText class="form-control" type="password" @bind-Value="RegisterModel.Password" />
            <ValidationMessage For="@(()=> RegisterModel.Password)" />
        </div>
        <div class="form-group">
            <label>Password</label>
            <InputText class="form-control" type="password" @bind-Value="RegisterModel.Password" />
            <ValidationMessage For="@(()=> RegisterModel.Password)" />
        </div>
        <button type="submit" class="btn btn-outline-primary btn-sm">Register</button>
    </EditForm>
    </div>
</div>
@code {
    private RegisterViewModel RegisterModel = new RegisterViewModel();
    private string[] Errors = new string[] { };


    private async Task SubmitRegister()
    {

    }
}
